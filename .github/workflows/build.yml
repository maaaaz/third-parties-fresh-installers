name: Fresh package build

on: 
  workflow_dispatch
  #schedule:
  #  - cron:  '10 02 * * *'

permissions:
  contents: write

jobs:
  build_pkg:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Set up environment
      run: |
        cd /tmp/
        ARCHIVE_ORG_ITEM_NAME="commontools"
        echo "ARCHIVE_ORG_ITEM_NAME=$ARCHIVE_ORG_ITEM_NAME" >> $GITHUB_ENV

        RELEASE_NAME="$(date '+%Y%m%d')"
        echo "RELEASE_NAME=$RELEASE_NAME" >> $GITHUB_ENV

        FRESH_INSTALLERS_ROOT_DIR="/tmp"
        FRESH_INSTALLERS_DIR="$FRESH_INSTALLERS_ROOT_DIR/third-parties-fresh-installers/"
        FRESH_INSTALLERS_ZIP_FNAME="third-parties-fresh-installers-$RELEASE_NAME.zip"
        FRESH_INSTALLERS_HASHES_FNAME="$FRESH_INSTALLERS_ZIP_FNAME.hashes.txt"
        FRESH_INSTALLERS_ZIP_PATH="$FRESH_INSTALLERS_ROOT_DIR/$FRESH_INSTALLERS_ZIP_FNAME"
        FRESH_INSTALLERS_HASH_PATH="$FRESH_INSTALLERS_ROOT_DIR/$FRESH_INSTALLERS_HASHES_FNAME"

        echo "FRESH_INSTALLERS_ROOT_DIR=$FRESH_INSTALLERS_ROOT_DIR" >> $GITHUB_ENV
        echo "FRESH_INSTALLERS_DIR=$FRESH_INSTALLERS_DIR" >> $GITHUB_ENV
        echo "FRESH_INSTALLERS_ZIP_FNAME=$FRESH_INSTALLERS_ZIP_FNAME" >> $GITHUB_ENV
        echo "FRESH_INSTALLERS_HASHES_FNAME=$FRESH_INSTALLERS_HASHES_FNAME" >> $GITHUB_ENV
        echo "FRESH_INSTALLERS_ZIP_PATH=$FRESH_INSTALLERS_ZIP_PATH" >> $GITHUB_ENV
        echo "FRESH_INSTALLERS_HASH_PATH=$FRESH_INSTALLERS_HASH_PATH" >> $GITHUB_ENV

        mkdir -p "$FRESH_INSTALLERS_DIR"
        
        LASTVERSION_VENV_PATH="/tmp/venvlastversion"
        LASTVERSION_VENV_PIP="$LASTVERSION_VENV_PATH/bin/pip"
        LASTVERSION_BIN="$LASTVERSION_VENV_PATH/bin/lastversion"
        echo "LASTVERSION_VENV_PATH=$LASTVERSION_VENV_PATH" >> $GITHUB_ENV
        echo "LASTVERSION_VENV_PIP=$LASTVERSION_VENV_PIP" >> $GITHUB_ENV
        echo "LASTVERSION_BIN=$LASTVERSION_BIN" >> $GITHUB_ENV
        
    - name: Install prerequisites
      run: |
        cd /tmp/
        git clone https://github.com/maaaaz/patchmypcdl.git
        git clone https://github.com/maaaaz/chocodl.git
        pip install -r ./patchmypcdl/requirements.txt internetarchive

        python3 -m venv "$LASTVERSION_VENV_PATH"
        $LASTVERSION_VENV_PIP install lastversion

    - name: Download files from PatchMyPC + Chocolatey + stable definitions
      run: |
        cd /tmp/
        python "/tmp/patchmypcdl/patchmypcdl.py" -i "$GITHUB_WORKSPACE/_Resources/patchmypc_inputs.txt"
        python "/tmp/chocodl/chocodl.py" -i "$GITHUB_WORKSPACE/_Resources/choco_inputs.txt"
        aria2c --log-level error --console-log-level error -i "$GITHUB_WORKSPACE/_Resources/aria2c_inputs.txt"
    
    - name: Download files with lastversion
      continue-on-error: true
      env:
       GITHUB_API_TOKEN: ${{ secrets.SECRET_TOKEN_GITHUB_FOR_LASTVERSION }}
      run: |
        cd /tmp/
        mkdir -p "/tmp/third-parties-fresh-installers/Microsoft PowerToys/" && cd "/tmp/third-parties-fresh-installers/Microsoft PowerToys/"
        $LASTVERSION_BIN --assets --formal --filter "PowerToysSetup-.*-x64.exe" download "https://github.com/microsoft/PowerToys/"

    - name: Download NirSoft Launcher
      continue-on-error: true
      run: |
        cd /tmp/
        mkdir -p "/tmp/nirsoftlauncher/" "/tmp/third-parties-fresh-installers/NirSoft/"
        wget -nv --referer='https://launcher.nirsoft.net/' --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36' 'https://download.nirsoft.net/nirsoft_package_enc_1.30.19.zip'
        unzip -P 'nirsoft9876$' -d /tmp/nirsoftlauncher/ nirsoft_package_enc_1.30.19.zip
        cd "/tmp/nirsoftlauncher/"
        zip -r "/tmp/third-parties-fresh-installers/NirSoft/NirSoft.zip" .
        
    - name: List files
      run: |
        du -sh "$FRESH_INSTALLERS_DIR"
        find "$FRESH_INSTALLERS_DIR" -type f | sort

    - name: Create zip and compute hash
      run: |
        zip -r "$FRESH_INSTALLERS_ZIP_PATH" "$FRESH_INSTALLERS_DIR"
        ls -alh "$FRESH_INSTALLERS_ZIP_PATH"

        cd $FRESH_INSTALLERS_ROOT_DIR
        sha1sum --tag "$FRESH_INSTALLERS_ZIP_FNAME" | tee "$FRESH_INSTALLERS_HASH_PATH"
        sha256sum --tag "$FRESH_INSTALLERS_ZIP_FNAME" | tee -a "$FRESH_INSTALLERS_HASH_PATH"
        
    - name: Push to archive.org
      env:   
        SECRET_ARCHIVE_ORG_LOGIN: ${{ secrets.SECRET_ARCHIVE_ORG_LOGIN }}
        SECRET_ARCHIVE_ORG_PASSWORD: ${{ secrets.SECRET_ARCHIVE_ORG_PASSWORD }}
      run: |
        cd /tmp/
        ia configure --username=$SECRET_ARCHIVE_ORG_LOGIN --password=$SECRET_ARCHIVE_ORG_PASSWORD
        ia delete $ARCHIVE_ORG_ITEM_NAME --all -H x-archive-keep-old-version:0 
        ia upload -q $ARCHIVE_ORG_ITEM_NAME $FRESH_INSTALLERS_ZIP_PATH --metadata="mediatype:software"
        ia upload -q $ARCHIVE_ORG_ITEM_NAME $FRESH_INSTALLERS_HASH_PATH --metadata="mediatype:texts"

    - name: Create a new Github release
      uses: softprops/action-gh-release@9d7c94cfd0a1f3ed45544c887983e9fa900f0564 #v2.0.4
      with:
        body_path: ${{ env.FRESH_INSTALLERS_HASH_PATH }}
        name: ${{ env.RELEASE_NAME }}
        tag_name: ${{ env.RELEASE_NAME }}
